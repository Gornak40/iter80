__: a b ::
a=  a
    b
    =a
..

__; a b ::
    a
    b
..

__+ a b ::
a=  a
    b
    `add a0, =a, a0`
..

__- a b ::
a=  a
    b
    `sub a0, =a, a0`
..

__iter a b ::
a:
    a
    `bz a0 :e`
    b
    `j :a`
e:
..

__? a b c ::
    a
    `bz :c`
    b
    `j :e`
c:
    c
e:
..

__null ::
    `xor a0, a0, a0`
..

__true ::
    `li a0, -1`
..

__accumulate A n ::
A=  A
n=  n
i=  null
sum= null
    iter < =i =n
        sum=  + =sum [] =A =i
    =sum
..
